<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.codeturnery</groupId>
	<artifactId>common-java-project-pom</artifactId>
	<version>1.0.1</version>
	<packaging>pom</packaging>
	<name>Basic Java project POM</name>
	<description>Provides common Maven configuration for Java ${java.version} projects.</description>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>17</java.version>
		<junit.version>5.11.0</junit.version>
	</properties>

	<dependencies>
		<!-- NULL HANDLING -->
		<dependency>
			<groupId>org.eclipse.jdt</groupId>
			<artifactId>org.eclipse.jdt.annotation</artifactId>
			<version>2.3.0</version>
		</dependency>

		<!-- JUNIT5 -->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- MOCKING -->
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>5.12.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-junit-jupiter</artifactId>
			<version>5.12.0</version>
			<scope>test</scope>
		</dependency>

		<!-- LOGGING -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-ext</artifactId>
			<version>2.0.16</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>2.0.16</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.13.0</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
				</configuration>
			</plugin>

			<!-- generate one documentation for developers with all docblocks and one for users with public docblocks only -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>3.8.0</version>
				<configuration>
					<javadocExecutable>${java.home}/bin/javadoc</javadocExecutable>
					<reportOutputDirectory>${project.reporting.outputDirectory}</reportOutputDirectory>
				</configuration>
				<executions>
					<execution>
						<id>default-test</id>
						<configuration>
							<!-- skip default execution -->
							<skip>true</skip>
						</configuration>
					</execution>
					<execution>
						<id>attach-all-javadocs</id>
						<configuration>
							<additionalOptions>
								<!-- For most projects documenting every
								member and method is not feasable, so we
								silence "missing" warnings for the developer
								documentation. Warnings for the user
								documentation (i.e. public members and
								methods) will still be shown by the
								"attach-public-javadocs" configured below -->
								<additionalOption>-Xdoclint:all,-missing</additionalOption>
							</additionalOptions>
							<show>private</show>
							<outputDirectory>${project.reporting.outputDirectory}/dev-javadoc</outputDirectory>
						</configuration>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
					<execution>
						<id>attach-public-javadocs</id>
						<configuration>
							<additionalOptions>
								<additionalOption>-Xdoclint:all</additionalOption>
							</additionalOptions>
							<show>public</show>
							<outputDirectory>${project.reporting.outputDirectory}/user-javadoc</outputDirectory>
						</configuration>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>3.4.0</version>
			</plugin>
		</plugins>
	</build>
</project>